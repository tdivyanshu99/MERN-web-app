{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/Footer.js","components/Message.js","components/Loader.js","components/Paginate.js","components/Meta.js","actions/userActions.js","actions/productActions.js","components/Rating.js","components/Product.js","components/homePage/LatestProducts.js","components/ProductCarousel.js","pages/HomeScreen.js","pages/ProductScreen.js","actions/cartActions.js","pages/CartScreen.js","components/FormContainer.js","pages/LoginScreen.js","pages/RegisterScreen.js","pages/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","pages/ShippingScreen.js","pages/PaymentScreen.js","pages/PlaceOrderScreen.js","pages/OrderScreen.js","pages/UserListScreen.js","pages/UserEditScreen.js","pages/ProductListScreen.js","pages/ProductEditScreen.js","pages/OrderListScreen.js","layout/NavBar.js","layout/SearchBar.js","App.js","serviceWorker.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_CLEAR_ITEMS","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","Footer","year","Date","getFullYear","Container","Row","Col","className","Message","variant","children","Alert","defaultProps","Loader","disabled","role","Paginate","isAdmin","keyword","Pagination","Array","keys","to","Item","active","Meta","title","description","keywords","Helmet","name","content","logout","dispatch","removeItem","document","location","href","getUserDetails","id","getState","a","config","headers","Authorization","token","axios","get","data","message","response","listProducts","pageNumber","listProductDetails","Rating","value","text","color","style","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","LatestProducts","useSelector","sm","md","lg","xl","ProductCarousel","useState","index","setIndex","useDispatch","useEffect","Carousel","pause","activeIndex","onSelect","selectedIndex","e","Image","alt","fluid","Caption","HomeScreen","match","params","ProductScreen","history","qty","setQty","setRating","comment","setComment","successProductReview","loadingProductReview","errorProductReview","ListGroup","countInStock","Form","Control","onChange","target","Button","onClick","push","length","review","createdAt","substring","onSubmit","productId","preventDefault","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","placeholder","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","Nav","Link","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","NavBar","SearchBar","setKeyword","trim","FormControl","autocomplete","App","render","path","component","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.18e183f3.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\n// these are my orders(loggedIn user's orders)\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\n// these are all the orders(admin's orders which he will view and mark as delivered)\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\nimport {\n  orderCreateReducer,\n  orderDetailsReducer,\n  orderPayReducer,\n  orderDeliverReducer,\n  orderListMyReducer,\n  orderListReducer,\n} from './reducers/orderReducers'\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store\n","import {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","import {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_CLEAR_ITEMS,\n} from '../constants/cartConstants'\n\nexport const cartReducer = (\n  state = { cartItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case CART_ADD_ITEM:\n      const item = action.payload\n\n      const existItem = state.cartItems.find((x) => x.product === item.product)\n\n      if (existItem) {\n        return {\n          ...state,\n          cartItems: state.cartItems.map((x) =>\n            x.product === existItem.product ? item : x\n          ),\n        }\n      } else {\n        return {\n          ...state,\n          cartItems: [...state.cartItems, item],\n        }\n      }\n    case CART_REMOVE_ITEM:\n      return {\n        ...state,\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n    case CART_SAVE_SHIPPING_ADDRESS:\n      return {\n        ...state,\n        shippingAddress: action.payload,\n      }\n    case CART_SAVE_PAYMENT_METHOD:\n      return {\n        ...state,\n        paymentMethod: action.payload,\n      }\n    case CART_CLEAR_ITEMS:\n      return {\n        ...state,\n        cartItems: [],\n      }\n    default:\n      return state\n  }\n}\n","import {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n} from '../constants/userConstants'\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n// admin is updating the user's info\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n  ORDER_CREATE_RESET,\n} from '../constants/orderConstants'\n\n// for for sending request to apis like /api/orders\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      }\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\n// for sending request to apis like /api/orders/:id\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      }\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n  // get current year\n  const year = new Date().getFullYear()\n\n  return (\n    <footer>\n      <Container>\n        <Row>\n          <Col className='text-center py-3'>\n            Copyright &copy; {year} Divyanshu Tiwari\n          </Col> \n        </Row>\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\n// import { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n  return (\n    <button className='btn btn-primary' type='button' disabled=''>\n      <span\n        className='spinner-grow spinner-grow-sm'\n        role='status'\n        aria-hidden='true'\n      />\n      Loading...\n    </button>\n  )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'Gadget World',\n  description: 'Get the Top Gadget Deals On The Go',\n  keywords: 'Top, Gadget, product, device, shop, next',\n}\n\nexport default Meta\n","import axios from 'axios'\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users/login',\n      { email, password },\n      config\n    )\n      // actions will always request to the server. just like postman\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  localStorage.removeItem('cartItems')\n  localStorage.removeItem('shippingAddress')\n  localStorage.removeItem('paymentMethod')\n  dispatch({ type: USER_LOGOUT })\n  dispatch({ type: USER_DETAILS_RESET })\n  dispatch({ type: ORDER_LIST_MY_RESET })\n  dispatch({ type: USER_LIST_RESET })\n  document.location.href = '/login'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const { data } = await axios.post(\n      '/api/users',\n      { name, email, password },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\n// admin will update this user's info\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\n    dispatch({ type: USER_DETAILS_RESET })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n","import axios from 'axios'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\nimport { logout } from './userActions'\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n    // this data will include products, and pageNumber and number of pages\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/products/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/products`, {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","import React from 'react'\n\nconst Rating = ({ value, text, color }) => {\n  return (\n    <div className='rating'>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 1\n              ? 'fas fa-star'\n              : value >= 0.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 2\n              ? 'fas fa-star'\n              : value >= 1.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 3\n              ? 'fas fa-star'\n              : value >= 2.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 4\n              ? 'fas fa-star'\n              : value >= 3.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>\n        <i\n          style={{ color }}\n          className={\n            value >= 5\n              ? 'fas fa-star'\n              : value >= 4.5\n              ? 'fas fa-star-half-alt'\n              : 'far fa-star'\n          }\n        ></i>\n      </span>\n      <span>{text && text}</span>\n    </div>\n  )\n}\n\nRating.defaultProps = {\n  color: '#f8e825',\n}\n\nexport default Rating\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\n\nconst Product = ({ product }) => {\n  return (\n    <Card className='shadow my-3 p-3 rounded'>\n      <Link to={`/product/${product._id}`}>\n        <Card.Img src={product.image} variant='top' />\n      </Link>\n\n      <Card.Body>\n        <Link to={`/product/${product._id}`}>\n          <Card.Title as='div'>\n            <strong className='text-uppercase'>{product.name}</strong>\n          </Card.Title>\n        </Link>\n\n        <Card.Text as='div'>\n          <Rating\n            value={product.rating}\n            text={`${product.numReviews} reviews`}\n          />\n        </Card.Text>\n\n        <Card.Text as='h3'>${product.price}</Card.Text>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default Product\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../Product'\n\nconst LatestProducts = () => {\n  const productList = useSelector((state) => state.productList)\n  const { products } = productList\n\n  return (\n    <Row>\n      {products.map((product) => (\n        <Col key={product._id} sm={12} md={6} lg={3} xl={3}>\n          <Product product={product} />\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default LatestProducts\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductCarousel = () => {\n  const [index, setIndex] = useState(0)\n\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex)\n  }\n  const dispatch = useDispatch()\n\n  const productTopRated = useSelector((state) => state.productTopRated)\n  const { loading, error, products } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <Carousel\n      pause='hover'\n      className='carouselBackground'\n      activeIndex={index}\n      onSelect={handleSelect}\n    >\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image src={product.image} alt={product.name} fluid />\n            <Carousel.Caption className='carousel-caption'>\n              <h2>\n                {product.name} (${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Container } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport Meta from '../components/Meta'\nimport { listProducts } from '../actions/productActions'\n\nimport LatestProducts from '../components/homePage/LatestProducts'\nimport ProductCarousel from '../components/ProductCarousel'\n\nconst HomeScreen = ({ match }) => {\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, page, pages } = productList\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <div className='container'>\n          <Link to='/' className='btn btn-light'>\n            Go Back\n          </Link>\n        </div>\n      )}\n      <Container>\n        <h1>Latest Products</h1>\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <>\n            <LatestProducts />\n            <Paginate\n              pages={pages}\n              page={page}\n              keyword={keyword ? keyword : ''}\n            />\n          </>\n        )}\n      </Container>\n    </>\n  )\n}\n\nexport default HomeScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form, Container } from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0)\n      setComment('')\n    }\n    if (!product._id || product._id !== match.params.id) {\n      dispatch(listProductDetails(match.params.id))\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n    // eslint-disable-next-line\n  }, [dispatch, match, successProductReview])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    )\n  }\n\n  return (\n    <Container>\n      <Link className='btn btn-light my-3' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Row>\n            <Col md={6}>\n              <Image src={product.image} alt={product.name} fluid />\n            </Col>\n            <Col md={3}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={3}>\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successProductReview && (\n                    <Message variant='success'>\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={loadingProductReview}\n                        type='submit'\n                        variant='primary'\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message>\n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </Container>\n  )\n}\n\nexport default ProductScreen\n","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Form,\n  Button,\n  Card,\n  Container,\n} from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  return (\n    <Container>\n      <Row>\n        <Col md={8}>\n          <h1>Shopping Cart</h1>\n          {cartItems.length === 0 ? (\n            <Message>\n              Your cart is empty <Link to='/'>Go Back</Link>\n            </Message>\n          ) : (\n            <ListGroup variant='flush'>\n              {cartItems.map((item) => (\n                <ListGroup.Item key={item.product}>\n                  <Row>\n                    <Col md={2}>\n                      <Image src={item.image} alt={item.name} fluid rounded />\n                    </Col>\n                    <Col md={3}>\n                      <Link to={`/product/${item.product}`}>{item.name}</Link>\n                    </Col>\n                    <Col md={2}>${item.price}</Col>\n                    <Col md={2}>\n                      <Form.Control\n                        as='select'\n                        value={item.qty}\n                        onChange={(e) =>\n                          dispatch(\n                            addToCart(item.product, Number(e.target.value))\n                          )\n                        }\n                      >\n                        {[...Array(item.countInStock).keys()].map((x) => (\n                          <option key={x + 1} value={x + 1}>\n                            {x + 1}\n                          </option>\n                        ))}\n                      </Form.Control>\n                    </Col>\n                    <Col md={2}>\n                      <Button\n                        type='button'\n                        variant='light'\n                        onClick={() => removeFromCartHandler(item.product)}\n                      >\n                        <i className='fas fa-trash'></i>\n                      </Button>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n              ))}\n            </ListGroup>\n          )}\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>\n                  Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}\n                  ) items\n                </h2>\n                $\n                {cartItems\n                  .reduce((acc, item) => acc + item.qty * item.price, 0)\n                  .toFixed(2)}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cartItems.length === 0}\n                  onClick={checkoutHandler}\n                >\n                  Proceed To Checkout\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default CartScreen\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign In</h1>\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Sign In\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          New Customer?{' '}\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n            Register\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default LoginScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\n\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  return (\n    <FormContainer>\n      <h1>Sign Up</h1>\n      {message && <Message variant='danger'>{message}</Message>}\n      {error && <Message variant='danger'>{error}</Message>}\n      {loading && <Loader />}\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='name'>\n          <Form.Label>Name</Form.Label>\n          <Form.Control\n            type='name'\n            placeholder='Enter name'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='email'>\n          <Form.Label>Email Address</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Enter email'\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='password'>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Enter password'\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='confirmPassword'>\n          <Form.Label>Confirm Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Confirm password'\n            value={confirmPassword}\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Register\n        </Button>\n      </Form>\n\n      <Row className='py-3'>\n        <Col>\n          Have an Account?{' '}\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n            Login\n          </Link>\n        </Col>\n      </Row>\n    </FormContainer>\n  )\n}\n\nexport default RegisterScreen\n","import React, { useState, useEffect } from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { listMyOrders } from '../actions/orderActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst ProfileScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile)\n  const { success } = userUpdateProfile\n\n  const orderListMy = useSelector((state) => state.orderListMy)\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    } else {\n      if (!user || !user.name || success) {\n        dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        dispatch(getUserDetails('profile'))\n        dispatch(listMyOrders())\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n      }\n    }\n  }, [dispatch, history, userInfo, user, success])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(updateUserProfile({ id: user._id, name, email, password }))\n    }\n  }\n\n  return (\n    <div className='container'>\n      <Row>\n        <Col md={3}>\n          <h2>User Profile</h2>\n          {message && <Message variant='danger'>{message}</Message>}\n          {}\n          {success && <Message variant='success'>Profile Updated</Message>}\n          {loading ? (\n            <Loader />\n          ) : error ? (\n            <Message variant='danger'>{error}</Message>\n          ) : (\n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId='name'>\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type='name'\n                  placeholder='Enter name'\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId='email'>\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type='email'\n                  placeholder='Enter email'\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId='password'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type='password'\n                  placeholder='Enter password'\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId='confirmPassword'>\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type='password'\n                  placeholder='Confirm password'\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Button type='submit' variant='primary'>\n                Update\n              </Button>\n            </Form>\n          )}\n        </Col>\n        <Col md={9}>\n          <h2>My Orders</h2>\n          {loadingOrders ? (\n            <Loader />\n          ) : errorOrders ? (\n            <Message variant='danger'>{errorOrders}</Message>\n          ) : (\n            <Table striped bordered hover responsive className='table-sm'>\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>DATE</th>\n                  <th>TOTAL</th>\n                  <th>PAID</th>\n                  <th>DELIVERED</th>\n                  <th></th>\n                </tr>\n              </thead>\n              <tbody>\n                {orders.map((order) => (\n                  <tr key={order._id}>\n                    <td>{order._id}</td>\n                    <td>{order.createdAt.substring(0, 10)}</td>\n                    <td>{order.totalPrice}</td>\n                    <td>\n                      {order.isPaid ? (\n                        order.paidAt.substring(0, 10)\n                      ) : (\n                        <i\n                          className='fas fa-times'\n                          style={{ color: 'red' }}\n                        ></i>\n                      )}\n                    </td>\n                    <td>\n                      {order.isDelivered ? (\n                        order.deliveredAt.substring(0, 10)\n                      ) : (\n                        <i\n                          className='fas fa-times'\n                          style={{ color: 'red' }}\n                        ></i>\n                      )}\n                    </td>\n                    <td>\n                      <LinkContainer to={`/order/${order._id}`}>\n                        <Button className='btn-sm' variant='light'>\n                          Details\n                        </Button>\n                      </LinkContainer>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </Table>\n          )}\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default ProfileScreen\n","import axios from 'axios'\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n} from '../constants/orderConstants'\nimport { logout } from './userActions'\n\n// for apis like /api/orders\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/orders`, order, config)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: data,\n    })\n    localStorage.removeItem('cartItems')\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\n// for apis like /api/orders/:id\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const payOrder = (orderId, paymentResult) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      paymentResult,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n  return (\n    <Nav className='justify-content-center mb-4'>\n      <Nav.Item>\n        {step1 ? (\n          <LinkContainer to='/login'>\n            <Nav.Link>Sign In</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Sign In</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step2 ? (\n          <LinkContainer to='/shipping'>\n            <Nav.Link>Shipping</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Shipping</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step3 ? (\n          <LinkContainer to='/payment'>\n            <Nav.Link>Payment</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Payment</Nav.Link>\n        )}\n      </Nav.Item>\n\n      <Nav.Item>\n        {step4 ? (\n          <LinkContainer to='/placeorder'>\n            <Nav.Link>Place Order</Nav.Link>\n          </LinkContainer>\n        ) : (\n          <Nav.Link disabled>Place Order</Nav.Link>\n        )}\n      </Nav.Item>\n    </Nav>\n  )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\nconst ShippingScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  const [address, setAddress] = useState(shippingAddress.address)\n  const [city, setCity] = useState(shippingAddress.city)\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  const [country, setCountry] = useState(shippingAddress.country)\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postal code'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter country'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen\n","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if (!shippingAddress.address) {\n    history.push('/shipping')\n  }\n\n  const [paymentMethod, setPaymentMethod] = useState('PayPal')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(savePaymentMethod(paymentMethod))\n    history.push('/placeorder')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3 />\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n          <Col>\n            <Form.Check\n              type='radio'\n              label='PayPal or Credit Card'\n              id='PayPal'\n              name='paymentMethod'\n              value='PayPal'\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check>\n            {/* <Form.Check\n              type='radio'\n              label='Stripe'\n              id='Stripe'\n              name='paymentMethod'\n              value='Stripe'\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></Form.Check> */}\n          </Col>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants'\nimport { USER_DETAILS_RESET } from '../constants/userConstants'\n\nconst PlaceOrderScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n\n  if (!cart.shippingAddress.address) {\n    history.push('/shipping')\n  } else if (!cart.paymentMethod) {\n    history.push('/payment')\n  }\n  //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n  const orderCreate = useSelector((state) => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n  useEffect(() => {\n    if (success) {\n      history.push(`/order/${order._id}`)\n      dispatch({ type: USER_DETAILS_RESET })\n      dispatch({ type: ORDER_CREATE_RESET })\n    }\n    \n  }, [history, success])\n\n  const placeOrderHandler = () => {\n    dispatch(\n      createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice,\n      })\n    )\n  }\n\n  return (\n    <>\n      <CheckoutSteps step1 step2 step3 step4 />\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address: </strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${cart.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${cart.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${cart.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${cart.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                {error && <Message variant='danger'>{error}</Message>}\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Button\n                  type='button'\n                  className='btn-block'\n                  disabled={cart.cartItems === 0}\n                  onClick={placeOrderHandler}\n                >\n                  Place Order\n                </Button>\n              </ListGroup.Item>\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default PlaceOrderScreen\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport { PayPalButton } from 'react-paypal-button-v2'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  getOrderDetails,\n  payOrder,\n  deliverOrder,\n} from '../actions/orderActions'\nimport {\n  ORDER_PAY_RESET,\n  ORDER_DELIVER_RESET,\n} from '../constants/orderConstants'\n\n//       /order/:id  <== orderscreen will appear after you have placed order...\nconst OrderScreen = ({ match, history }) => {\n  const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n    order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      // sdkReady is the state, which tells, that SDK is ready\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      // putting that SDKscript into the body\n      document.body.appendChild(script)\n    }\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        // if paypalSDKscript is not loaded yet, into the body...\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n    // eslint-disable-next-line\n  }, [dispatch, orderId, successPay, successDeliver, order])\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult)\n    // payOrder updates the order to be paid\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n  }\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      <h1>Order {order._id}</h1>\n      <Row>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong>Email: </strong>{' '}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong>Address:</strong>\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivered on {order.deliveredAt}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>Paid on {order.paidAt}</Message>\n              ) : (\n                <Message variant='danger'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                userInfo.isAdmin &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport default OrderScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\nconst UserListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const userList = useSelector((state) => state.userList)\n  const { loading, error, users } = userList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const userDelete = useSelector((state) => state.userDelete)\n  const { success: successDelete } = userDelete\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, successDelete, userInfo])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteUser(id))\n    }\n  }\n\n  return (\n    <div className='container'>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td>\n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </div>\n  )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\n// here in this screen, two actions are dispatched, getUserDetails and updateUser\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n  }\n\n  return (\n    <Container>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </Container>\n  )\n}\n\nexport default UserEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col, Container } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  const productDelete = useSelector((state) => state.productDelete)\n\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login')\n    }\n    // this will run if user is loggedIn and also the admin...\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n\n  return (\n    <Container>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>CATEGORY</th>\n                <th>BRAND</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>${product.price}</td>\n                  <td>{product.category}</td>\n                  <td>{product.brand}</td>\n                  <td>\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n          <Paginate pages={pages} page={page} isAdmin={true} />\n        </>\n      )}\n    </Container>\n  )\n}\n\nexport default ProductListScreen\n","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const uploadFileHandler = async (e) => {\n    const file = e.target.files[0]\n    const formData = new FormData()\n    formData.append('image', file)\n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      const { data } = await axios.post('/api/upload', formData, config)\n      // data is a path of the image\n      setImage(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    )\n  }\n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={image}\n                onChange={(e) => setImage(e.target.value)}\n              ></Form.Control>\n              <Form.File\n                id='image-file'\n                label='Choose File'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\n\n// all the orders' list will be displayed to the admin...\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                <td>{order.user && order.user.name}</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order.isPaid ? (\n                    order.paidAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='light' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n  )\n}\n\nexport default OrderListScreen\n","import React from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Nav } from 'react-bootstrap'\nimport { logout } from '../actions/userActions'\n\n// it is the header\nexport const NavBar = () => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  return (\n    <nav className='navbar navbar-expand-lg navbar-light bg-light fixed-top mb-5'>\n      <div className='container'>\n        <LinkContainer to='/'>\n          \n          <a className='navbar-brand'>Gadget World</a>\n        </LinkContainer>\n        <button\n          className='navbar-toggler'\n          type='button'\n          data-bs-toggle='collapse'\n          data-bs-target='#navbarResponsive'\n          aria-controls='navbarResponsive'\n          aria-expanded='false'\n          aria-label='Toggle navigation'\n        >\n          <span className='navbar-toggler-icon' />\n        </button>\n        <div className='collapse navbar-collapse' id='navbarResponsive'>\n          <ul className='navbar-nav ms-auto'>\n            <li className='nav-item active'>\n              <LinkContainer to='/cart'>\n                {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                <a className='nav-link'>\n                  {/* {userInfo ? userInfo.name : <i className='fa fa-user'></i>} */}\n                  {userInfo ? (\n                    <>\n                      <i className='fas fa-shopping-cart'></i> Cart (\n                      {cartItems.reduce((acc, item) => acc + item.qty, 0)})\n                    </>\n                  ) : (\n                    <>\n                      <i className='fas fa-shopping-cart'></i> Cart\n                    </>\n                  )}\n                </a>\n              </LinkContainer>\n            </li>\n            <div\n              className='collapse navbar-collapse'\n              id='navbarSupportedContent'\n            >\n              <ul className='navbar-nav ms-auto'>\n                <li className='nav-item dropdown'>\n                  <a\n                    className='nav-link dropdown-toggle'\n                    href='/'\n                    id='navbarDropdown'\n                    role='button'\n                    data-bs-toggle='dropdown'\n                    aria-haspopup='true'\n                    aria-expanded='false'\n                  >\n                    {userInfo ? userInfo.name : <i className='fa fa-user'></i>}\n                    {/* <i className='fa fa-user'></i> Me */}\n                  </a>\n                  {/* Here's the magic. Add the .animate and .slideIn classes to your .dropdown-menu and you're all set! */}\n                  <div\n                    className='dropdown-menu dropdown-menu-end animate slideIn'\n                    aria-labelledby='navbarDropdown'\n                  >\n                    {userInfo ? (\n                      //   <a className='dropdown-item' href='/'>\n                      //   Another action\n                      // </a>\n                      <div title={userInfo.name} id='username'>\n                        <LinkContainer to='/profile'>\n                          <a className='dropdown-item'>My Profile</a>\n                        </LinkContainer>\n                        <a className='dropdown-item' onClick={logoutHandler}>\n                          Logout\n                        </a>\n                        {/* <NavDropdown.Item onClick={logoutHandler}>\n                          Logout\n                        </NavDropdown.Item> */}\n                      </div>\n                    ) : (\n                      <LinkContainer to='/login'>\n                        <Nav.Link>\n                          <i className='fas fa-user'></i> Sign In\n                        </Nav.Link>\n                      </LinkContainer>\n                    )}\n\n                    {userInfo && userInfo.isAdmin && (\n                      <>\n                        <div className='dropdown-divider' />\n                        <LinkContainer to='/admin/userlist'>\n                          <a className='dropdown-item'>Users</a>\n                        </LinkContainer>\n                        <LinkContainer to='/admin/productlist'>\n                          <a className='dropdown-item'>Products</a>\n                        </LinkContainer>\n                        <LinkContainer to='/admin/orderlist'>\n                          <a className='dropdown-item'>Orders</a>\n                        </LinkContainer>\n                      </>\n                    )}\n                    {/* <a className='dropdown-item' href='/'>\n                      Something else here\n                    </a> */}\n                  </div>\n                </li>\n              </ul>\n            </div>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","import { Form, FormControl, Container, Button } from 'react-bootstrap'\nimport React, { useState } from 'react'\n\nconst SearchBar = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n  return (\n    <Container className='mb-3 mt-3'>\n      <Form onSubmit={submitHandler} className='d-flex'>\n        <FormControl\n          type='text'\n          name='q'\n          onChange={(e) => setKeyword(e.target.value)}\n          placeholder='Search Products...'\n          className='me-2'\n          autocomplete=\"off\"\n        ></FormControl>\n        <Button type='submit' variant='outline-success' className='p-2'>\n          Search\n        </Button>\n      </Form>\n    </Container>\n  )\n}\n\nexport default SearchBar\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\n// import { Container } from 'react-bootstrap'\n// import Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './pages/HomeScreen'\nimport ProductScreen from './pages/ProductScreen'\nimport CartScreen from './pages/CartScreen'\nimport LoginScreen from './pages/LoginScreen'\nimport RegisterScreen from './pages/RegisterScreen'\nimport ProfileScreen from './pages/ProfileScreen'\nimport ShippingScreen from './pages/ShippingScreen'\nimport PaymentScreen from './pages/PaymentScreen'\nimport PlaceOrderScreen from './pages/PlaceOrderScreen'\nimport OrderScreen from './pages/OrderScreen'\nimport UserListScreen from './pages/UserListScreen'\nimport UserEditScreen from './pages/UserEditScreen'\nimport ProductListScreen from './pages/ProductListScreen'\nimport ProductEditScreen from './pages/ProductEditScreen'\nimport OrderListScreen from './pages/OrderListScreen'\n\n// PAGE LAYOUTS\nimport { NavBar } from './layout/NavBar'\nimport SearchBar from './layout/SearchBar'\n\nconst App = () => {\n  return (\n    <Router>\n      {/* <Header /> */}\n      <NavBar />\n      <main className='py-3 main-section'>\n        <Route render={({ history }) => <SearchBar history={history} />} />\n        <Route path='/order/:id' component={OrderScreen} exact />\n        <Route path='/shipping' component={ShippingScreen} exact />\n        <Route path='/payment' component={PaymentScreen} exact />\n        <Route path='/placeorder' component={PlaceOrderScreen} exact />\n        <Route path='/login' component={LoginScreen} exact />\n        <Route path='/register' component={RegisterScreen} exact />\n        <Route path='/profile' component={ProfileScreen} exact />\n        <Route path='/product/:id' component={ProductScreen} exact />\n        <Route path='/cart/:id?' component={CartScreen} exact />\n        <Route path='/admin/userlist' component={UserListScreen} exact />\n        <Route path='/admin/user/:id/edit' component={UserEditScreen} exact />\n        <Route path='/admin/productlist' component={ProductListScreen} exact />\n        <Route\n          path='/admin/productlist/:pageNumber'\n          component={ProductListScreen}\n          exact\n        />\n        <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n        <Route path='/admin/orderlist' component={OrderListScreen} />\n        <Route path='/search/:keyword' component={HomeScreen} exact />\n        <Route path='/page/:pageNumber' component={HomeScreen} exact />\n        <Route\n          path='/search/:keyword/page/:pageNumber'\n          component={HomeScreen}\n          exact\n        />\n        <Route path='/' component={HomeScreen} exact />\n      </main>\n      <Footer />\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}